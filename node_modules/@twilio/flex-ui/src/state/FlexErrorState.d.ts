import { Dispatch, Action } from "redux";
import { FlexError } from "../FlexError";
export interface FlexErrorStateAction extends Action {
    readonly payload?: any;
}
export interface FlexErrorState {
    errors: Array<FlexError>;
}
export declare const ACTION_NEW_FLEX_ERROR = "ACTION_NEW_FLEX_ERROR";
export declare const ACTION_CLEAR_ALL_ERRORS = "ACTION_CLEAR_ALL_ERRORS";
export declare function reduce(state: FlexErrorState, action: FlexErrorStateAction): {
    errors: any[];
};
export declare class Actions {
    static get dispatcher(): Dispatch<any>;
    static newFlexError(error: FlexError): void;
    static clearAllErrors(): void;
}

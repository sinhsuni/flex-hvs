import { QueuesFilterFunction, QueuesState, WorkerQueue, WorkerQueueSLA, WorkerQueueTasksNow, WorkerQueueWorkerStatistics, WorkspaceStats } from "./QueuesStateTypes";
export declare const FlexActivityUnavailable: {
    available: boolean;
    name: string;
    sid: string;
};
export declare const FlexActivityAvailable: {
    available: boolean;
    name: string;
    sid: string;
};
export declare const FlexActivityBreak: {
    available: boolean;
    name: string;
    sid: string;
};
export declare const FlexActivityOffline: {
    available: boolean;
    name: string;
    sid: string;
};
export declare const queue1: WorkerQueue;
export declare const queue2: WorkerQueue;
export declare const queue3: WorkerQueue;
export declare const queueAdded: WorkerQueue;
export declare const queue3Updated: WorkerQueue;
export declare const workspaceStats: WorkspaceStats;
export declare function getQueuesState(): QueuesState;
export declare function getQueuesStateWithChannelConfig(): QueuesState;
export declare function getQueuesStateAfterSET_QUEUES(): QueuesState;
export declare function getQueuesStateAfterSET_WORKSPACE_STATS(): QueuesState;
export declare function getQueuesStateAfterADD_QUEUE(): QueuesState;
export declare function getQueuesStateAfterUPDATE_QUEUE(): QueuesState;
export declare function getQueuesStateAfterUPDATE_FILTER(filter: QueuesFilterFunction): QueuesState;
export declare function getQueuesStateAfterREMOVE_QUEUE(): QueuesState;
export declare function getQueuesStateAfterQUEUES_ERRROR(): QueuesState;
export declare function getQueuesStateAfterUPDATE_QUEUES_CONFIG(): QueuesState;
export declare function getInitialState(): QueuesState;
export declare const tasks_now: WorkerQueueTasksNow;
export declare const worker_activities_statistics: WorkerQueueWorkerStatistics;
export declare const tasks_thirty_minutes: WorkerQueueSLA;
export declare const tasks_today: WorkerQueueSLA;
export declare const slaTransformedQueue: WorkerQueue;
export declare const queueWithChannels: {
    channels: {
        sid: string;
        unique_name: string;
        friendly_name: string;
        sla_30_min: WorkerQueueSLA;
    }[];
    friendly_name: string;
    total_available_workers: number;
    total_eligible_workers: number;
    sla_30_min?: WorkerQueueSLA;
    sla_today?: WorkerQueueSLA;
    key: string;
    activity_statistics: import("./QueuesStateTypes").ActivityStatistic[];
    tasks_by_priority: {
        [key: string]: number;
    };
    tasks_by_status: {
        reserved: number;
        pending: number;
        assigned: number;
        wrapping: number;
    };
    total_tasks: number;
    longest_task_waiting_sid: string;
    longest_task_waiting_from: string;
};
export declare const queueWithOneChannel: {
    channels: {
        sid: string;
        unique_name: string;
        friendly_name: string;
    }[];
    friendly_name: string;
    total_available_workers: number;
    total_eligible_workers: number;
    sla_30_min?: WorkerQueueSLA;
    sla_today?: WorkerQueueSLA;
    key: string;
    activity_statistics: import("./QueuesStateTypes").ActivityStatistic[];
    tasks_by_priority: {
        [key: string]: number;
    };
    tasks_by_status: {
        reserved: number;
        pending: number;
        assigned: number;
        wrapping: number;
    };
    total_tasks: number;
    longest_task_waiting_sid: string;
    longest_task_waiting_from: string;
};
export declare const queueWithChannelsAndTasksNow: {
    channels: {
        sid: string;
        unique_name: string;
        friendly_name: string;
        sla_30_min: WorkerQueueSLA;
        tasks_now: WorkerQueueTasksNow;
    }[];
    friendly_name: string;
    total_available_workers: number;
    total_eligible_workers: number;
    sla_30_min?: WorkerQueueSLA;
    sla_today?: WorkerQueueSLA;
    key: string;
    activity_statistics: import("./QueuesStateTypes").ActivityStatistic[];
    tasks_by_priority: {
        [key: string]: number;
    };
    tasks_by_status: {
        reserved: number;
        pending: number;
        assigned: number;
        wrapping: number;
    };
    total_tasks: number;
    longest_task_waiting_sid: string;
    longest_task_waiting_from: string;
};

import { baseConferenceListenerCallback, OutboundTransfer } from "./Conferences.definitions";
import { SyncMapItem } from "twilio-sync";
export declare type ConferenceListenerCallback = baseConferenceListenerCallback<ConferenceListener>;
export declare class ConferenceListener {
    private failedTransferRemoveTimer;
    private map;
    private updateCallback;
    private lifeCycle;
    private stateUpdateTimers;
    sid: string;
    children: Array<SyncMapItem>;
    outboundTransfer: OutboundTransfer;
    private static mapQuerySemaphore;
    constructor(sid: string, updateCallback?: ConferenceListenerCallback);
    triggerDelayedStateUpdate(timeout: number): void;
    stop(): void;
    private initOutgoingTransferListeners;
    private stopOutgoingTransferListeners;
    initOutboundTransfer(outgoingTransferObject: any): void;
    unInitOutboundTransfer(): void;
    private updateOutboundTransfer;
    private initialize;
    private emitCallback;
    private itemAdded;
    private itemUpdated;
    private itemRemoved;
}

import * as React from "react";
import { PublicSegment, Segment } from "../../../../state/InsightsState.definitions";
export declare const PanelContainer: import("@twilio/flex-ui-core").StyledOtherComponent<{
    hidden?: boolean;
}, React.DetailedHTMLProps<React.HTMLAttributes<HTMLDivElement>, HTMLDivElement>, import("../../../theme").Theme>;
export declare const PanelTitle: import("@twilio/flex-ui-core").StyledOtherComponent<object, React.DetailedHTMLProps<React.HTMLAttributes<HTMLDivElement>, HTMLDivElement>, import("../../../theme").Theme>;
export declare const PanelTitleIcon: import("@twilio/flex-ui-core").StyledOtherComponent<object, import("@twilio/flex-ui-core").IconProps, import("../../../theme").Theme>;
export declare const PanelContent: import("@twilio/flex-ui-core").StyledOtherComponent<object, React.DetailedHTMLProps<React.HTMLAttributes<HTMLDivElement>, HTMLDivElement>, import("../../../theme").Theme>;
export declare type ConversationViewPanelOwnProps = {
    id: string;
    title: string;
    name: string;
    icon?: string;
    keepMounted?: boolean;
    children: React.ReactElement | ((segment: PublicSegment) => React.ReactNode);
};
export declare type ConversationViewPanelStateProps = {
    segment: Segment;
};
export declare type ConversationViewPanelProps = ConversationViewPanelOwnProps & ConversationViewPanelStateProps;
export declare class ConversationViewPanelWithContext extends React.Component<ConversationViewPanelProps> {
    static defaultProps: {
        keepMounted: boolean;
    };
    render(): JSX.Element;
}
export declare const ConversationViewPanel: import("react-redux").ComponentClass<Pick<ConversationViewPanelProps, never> & ConversationViewPanelOwnProps> & {
    WrappedComponent: React.ComponentType<ConversationViewPanelProps>;
};

import * as React from "react";
import { IQuestion, IAnswer, IAssessment } from "../../../../core/Insights/Questionnaires/Questionnaire.models";
interface QuestionOwnProps {
    question: IQuestion;
    onAnswerSubmitted: (assessment: IAssessment) => void;
    assessments: Array<IAssessment>;
}
interface QuestionStateProps {
    NAanswer?: IAnswer;
}
declare type QuestionProps = QuestionOwnProps & QuestionStateProps;
export declare const ClearInputButton: import("@twilio/flex-ui-core").StyledOtherComponent<{
    isVisible: boolean;
}, React.DetailedHTMLProps<React.HTMLAttributes<HTMLDivElement>, HTMLDivElement>, import("../../../theme").Theme>;
export declare class _QuestionComponent extends React.PureComponent<QuestionProps, {
    hovering: boolean;
}> {
    state: {
        hovering: boolean;
    };
    submitAnswer: (answer: IAnswer) => void;
    resetAnswer: () => void;
    hover: (hovering: boolean) => () => void;
    render(): JSX.Element;
}
export declare const QuestionComponent: import("react-redux").ComponentClass<Pick<QuestionProps, "question" | "onAnswerSubmitted" | "assessments"> & QuestionOwnProps> & {
    WrappedComponent: React.ComponentType<QuestionProps>;
};
export {};

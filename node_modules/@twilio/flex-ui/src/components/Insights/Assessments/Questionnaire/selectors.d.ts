import { IAssessment } from "../../../../core/Insights/Questionnaires/Questionnaire.models";
import { AppState } from "../../../../state/AppState";
export declare const assessmentsSelector: (state: AppState) => {
    [segmentId: string]: IAssessment[];
};
export declare const questionnairesSelector: (state: AppState) => import("../../../../core/Insights/Questionnaires/Questionnaire.models").IQuestionnaire[];
export declare const segmentIdSelector: (state: AppState, ownProps: any) => any;
export declare const assessmentsForSegmentSelector: import("reselect").OutputParametricSelector<AppState, any, IAssessment[], (res1: {
    [segmentId: string]: IAssessment[];
}, res2: any) => IAssessment[]>;
export declare const assessmentsForQuestionnaireSelector: import("reselect").OutputParametricSelector<any, any, IAssessment[], (res1: string, res2: IAssessment[]) => IAssessment[]>;
export declare const answerCountAsweredSelector: import("reselect").OutputParametricSelector<any, any, number, (res1: string, res2: IAssessment[]) => number>;
export declare const answerCountTotalSelector: import("reselect").OutputParametricSelector<any, {
    questionnaireId: string;
}, number, (res: import("../../../../core/Insights/Questionnaires/Questionnaire.models").IQuestionnaire) => number>;

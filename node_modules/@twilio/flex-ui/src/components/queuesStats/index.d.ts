export { AggregatedQueuesDataTilesProps, AggregatedQueuesDataTiles } from "./AggregatedQueuesDataTiles";
export { QueuesDataTable, QueuesDataTableProps, QueuesDataTableCell, QueuesDataTableCellProps } from "./QueuesDataTable";
export { ActivityStatistic, WorkerQueue, WorkspaceStats } from "../../state/QueuesState";
import { QueuesFilterFunction, QueuesSubscriptionFilterFunction } from "../../state/QueuesState/QueuesStateTypes";
/**
 * Sets visibility filter for subscribed queues in QueuesStats.
 * Takes a [filter function]{@link QueuesStats.QueuesFilterFunction} as an argument.
 * A Queue is displayed, if the return value is <code>true</code>.
 *
 * For more information and examples please refer to [Twilio Flex Docs]{@link https://www.twilio.com/docs/flex/developer/ui/queues-view-programmability}.
 *
 * @param {QueuesStats.QueuesFilterFunction} filter
 * @memberof QueuesStats
 */
declare const setFilter: (filter: QueuesFilterFunction) => void;
/**
 * Sets subscription filter for QueuesStats.
 * Takes a filter function as an argument.
 * A Queue is subscribed to, if the function returns <code>true</code> for the given queue.
 *
 * For more information and examples please refer to [Twilio Flex Docs]{@link https://www.twilio.com/docs/flex/developer/ui/queues-view-programmability}.
 *
 * @param {QueuesStats.QueuesFilterFunction} filter
 * @memberof QueuesStats
 */
declare const setSubscriptionFilter: (filter: QueuesSubscriptionFilterFunction) => void;
export { setFilter, setSubscriptionFilter };

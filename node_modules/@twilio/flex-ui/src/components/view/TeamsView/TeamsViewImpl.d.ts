import * as React from "react";
import { RouteComponentProps, StaticContext } from "react-router";
import * as H from "history";
import { DynamicContentStore, FilterDefinition } from "@twilio/flex-ui-core";
import { WorkerListFilter } from "../../WorkersDataTable";
import { ITask, IWorker } from "../../../models";
import { ActiveFilter, ActiveFilters } from "../../../state/ViewState";
import { LiveQueryError } from "../../../state/Supervisor/SupervisorState";
import { ThemeProps } from "../../theme";
import { SupervisorWorkerState } from "../../../state/State.definition";
export declare const displayName = "TeamsView";
export declare const contentStore: DynamicContentStore;
export interface TeamsViewRouteParams {
    resource?: "tasks" | "workers";
    sid?: string;
}
interface TeamsViewImplStateProps {
    appliedFilters?: ActiveFilters;
    appliedLegacyFilterQuery: string;
    filters: Array<FilterDefinition>;
    filtersEnabled: boolean;
    filterQuery: string;
    isLoadingWorkers: boolean;
    isSearchFilterApplied: boolean;
    legacyFilters?: Array<WorkerListFilter>;
    monitoredTaskSid?: string;
    stickyWorker?: SupervisorWorkerState;
    workers?: Array<SupervisorWorkerState>;
    errorLoadingWorkers: LiveQueryError;
}
export interface ViewProps<Params extends {
    [K in keyof Params]?: string;
} = {}, C extends StaticContext = StaticContext, S = H.LocationState> {
    isViewActive?: boolean;
    route?: RouteComponentProps<Params, C, S>;
}
export declare type TeamsViewImplOwnProps = ThemeProps & ViewProps<TeamsViewRouteParams> & {
    hiddenFilter?: ActiveFilter | ActiveFilter[] | string;
};
export declare type TeamsViewImplProps = TeamsViewImplStateProps & TeamsViewImplOwnProps;
interface TeamsViewImplState {
    isFilterPanelOpen: boolean;
    searchText: string;
    selectedTask?: ITask;
    selectedWorker?: IWorker;
}
export declare class TeamsViewImpl extends React.PureComponent<TeamsViewImplProps, TeamsViewImplState> {
    state: TeamsViewImplState;
    private static getTaskSidFromRoute;
    componentDidMount(): void;
    componentDidUpdate(oldProps: TeamsViewImplProps, oldState: TeamsViewImplState): void;
    static getDerivedStateFromProps(props: TeamsViewImplProps, state: TeamsViewImplState): {
        selectedTask: ITask;
        selectedWorker: IWorker<any>;
    };
    private static getWorkerSidFromRoute;
    private loadChatChannel;
    private loadWorkers;
    private renderDataTable;
    render(): JSX.Element;
    private renderFilters;
    private rendersResultsSummary;
    private applyFilters;
    private resetFilters;
    private onSearchTextChange;
    private onSearchClear;
    private onSearchSubmit;
    private onFilterButtonClick;
    openFiltersPanel: () => void;
    closeFiltersPanel: (callback?: () => void) => void;
    private handleTaskSelection;
    private handleWorkerSelection;
}
export {};

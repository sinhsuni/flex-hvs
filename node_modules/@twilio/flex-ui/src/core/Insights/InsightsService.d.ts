import { SDK as GoodDataSDK } from "@gooddata/gooddata-js";
import type { Manager } from "../Manager";
import { IdentityClient } from "./Identity/Identity.definitions";
import { InsightsPermission } from "./InsightsService.definitions";
export declare class InsightsService {
    private static instance?;
    private manager;
    private isLoggedIn;
    private analyticsUrl;
    identityClient: IdentityClient;
    sdk?: GoodDataSDK;
    constructor(manager: Manager);
    static init(manager: Manager): Promise<void>;
    static destroy(skipYticaLogout?: boolean): Promise<void>;
    static getInstance(): InsightsService;
    static hasPermission(permission: string | typeof InsightsPermission): boolean;
    private loginWithTimeout;
    private login;
    private logout;
    private logoutYtica;
    private openYticaLogoutIframe;
    private registerFlexActions;
    private updateProfileInfo;
    loginGoodData(): Promise<void>;
    getAnalyticalDashboardDrillableItems(dashboardId: string): Promise<void>;
    fetchWidgetsMetrics(widgets: Array<string>): Promise<string[]>;
    fetchProjectDashboards(): Promise<void>;
    fetchAnalyticalDashboards(): Promise<void>;
}
